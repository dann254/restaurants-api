# Generated by Django 3.0.1 on 2019-12-30 13:35

from django.db import migrations, models
from django.template.defaultfilters import slugify
from django.conf import settings
import csv
from datetime import *
import time

def get_iso_weekday(day):
    return time.strptime(day, '%a').tm_wday + 1

def convert_to_24_hour(time):
    raw = time.split(' ')
    meridiem = raw[1].upper()

    raw_time = raw[0].split(':')
    if len(raw_time) == 1:
        raw_time.append('00')

    raw_time.append('00')

    twelve_h_time = "{}:{}:{} {}".format(raw_time[0], raw_time[1], raw_time[2], meridiem)
    return datetime.strptime(twelve_h_time, '%I:%M:%S %p').strftime('%H:%M:%S')

def seed_restaurants(apps, schema_editor):
    """Seed restaurants and their schedules"""
    Restaurant = apps.get_model("api", "Restaurant")
    Schedule = apps.get_model("api", "Schedule")
    Weekday = apps.get_model("api", "Weekday")

    seed_dir = settings.SEED_DIR

    with open(seed_dir + '/restaurants.csv') as csv_file:
        reader = csv.reader(csv_file)
        restaurants = []

        for row in reader:
            r_schedules = []

            restaurant_name = row[0]
            slug = slugify(restaurant_name)
            raw_schedule = row[1]

            restaurant = Restaurant(name = restaurant_name, slug=slug )
            restaurant.save()

            raw_schedule_array = [x.strip() for x in raw_schedule.split('/')]
            
            for schedule in raw_schedule_array:
                raw_day_group = [x.strip() for x in schedule.split(',')]
                extra_day = None
                if len(raw_day_group) > 1:
                    open_times = raw_day_group[1].split(' ', 1)[1].split('-')

                    if len(raw_day_group[0].split('-')) == 1:
                        extra_day = raw_day_group[0]
                        weekday_ranges = raw_day_group[1].split(' ', 1)[0].split('-')
                    else:
                        extra_day = raw_day_group[1].split(' ', 1)[0]
                        weekday_ranges = raw_day_group[0].split('-')
                else:
                    open_times = raw_day_group[0].split(' ', 1)[1].split('-')
                    weekday_ranges = raw_day_group[0].split(' ', 1)[0].split('-')

                    if len(weekday_ranges) == 1:
                        weekday_ranges = weekday_ranges +  weekday_ranges

                start_range = get_iso_weekday(weekday_ranges[0])
                end_range = get_iso_weekday(weekday_ranges[1])

                weekdays = []

                for i in range(start_range, end_range+1):
                    weekdays.append(i)
                if extra_day:
                    weekdays.append(get_iso_weekday(extra_day))

                for day in weekdays:
                    weekday = Weekday.objects.get(iso_weekday=day)
                    r_schedule = Schedule(
                        opening_time = convert_to_24_hour(open_times[0].strip()),
                        closing_time = convert_to_24_hour(open_times[1].strip()),
                        weekday_id = weekday.id,
                        restaurant_id = restaurant.id
                    )

                    r_schedule.save()


def reverse_func(apps, schema_editor):
    Restaurant = apps.get_model("api", "Restaurant")

    Restaurant.objects.all().delete()

class Migration(migrations.Migration):

    dependencies = [
        ('api', '0003_seed_weekdays'),
    ]

    operations = [
        migrations.RunPython(seed_restaurants, reverse_func),
    ]
